{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/data/Projects/DSC/project-kiwi/src/redux/Root.js\";\nimport React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducers from './reducers';\nconst initialState = {};\nconst middlewares = [thunk];\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middlewares)));\n\nconst Root = ({\n  initialState = {},\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Root;","map":{"version":3,"sources":["/mnt/data/Projects/DSC/project-kiwi/src/redux/Root.js"],"names":["React","createStore","applyMiddleware","Provider","thunk","composeWithDevTools","reducers","initialState","middlewares","store","Root","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,WAAW,GAAG,CAACJ,KAAD,CAApB;AAEA,MAAMK,KAAK,GAAGR,WAAW,CACvBK,QADuB,EAEvBC,YAFuB,EAGvBF,mBAAmB,CAACH,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAHI,CAAzB;;AAMA,MAAME,IAAI,GAAG,CAAC;AAAEH,EAAAA,YAAY,GAAG,EAAjB;AAAqBI,EAAAA;AAArB,CAAD,KAAqC;AAChD,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAjB;AAAA,cAAyBE;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,eAAeD,IAAf","sourcesContent":["import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport reducers from './reducers'\n\nconst initialState = {}\nconst middlewares = [thunk]\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n)\n\nconst Root = ({ initialState = {}, children }) => {\n  return <Provider store={store}>{children}</Provider>\n}\n\nexport default Root\n"]},"metadata":{},"sourceType":"module"}