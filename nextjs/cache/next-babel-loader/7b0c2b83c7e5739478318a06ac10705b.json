{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/data/Projects/DSC/project-kiwi/src/redux/Root.js\",\n    _this = this;\n\nimport React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducers from './reducers';\nvar initialState = {};\nvar middlewares = [thunk];\nvar store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middlewares)));\n\nvar Root = function Root(_ref) {\n  var _ref$initialState = _ref.initialState,\n      initialState = _ref$initialState === void 0 ? {} : _ref$initialState,\n      children = _ref.children;\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = Root;\nexport default Root;\n\nvar _c;\n\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"sources":["/mnt/data/Projects/DSC/project-kiwi/src/redux/Root.js"],"names":["React","createStore","applyMiddleware","Provider","thunk","composeWithDevTools","reducers","initialState","middlewares","store","Root","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,WAAW,GAAG,CAACJ,KAAD,CAApB;AAEA,IAAMK,KAAK,GAAGR,WAAW,CACvBK,QADuB,EAEvBC,YAFuB,EAGvBF,mBAAmB,CAACH,eAAe,MAAf,SAAmBM,WAAnB,CAAD,CAHI,CAAzB;;AAMA,IAAME,IAAI,GAAG,SAAPA,IAAO,OAAqC;AAAA,+BAAlCH,YAAkC;AAAA,MAAlCA,YAAkC,kCAAnB,EAAmB;AAAA,MAAfI,QAAe,QAAfA,QAAe;AAChD,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAjB;AAAA,cAAyBE;AAAzB;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAFD;;KAAMD,I;AAIN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport reducers from './reducers'\n\nconst initialState = {}\nconst middlewares = [thunk]\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n)\n\nconst Root = ({ initialState = {}, children }) => {\n  return <Provider store={store}>{children}</Provider>\n}\n\nexport default Root\n"]},"metadata":{},"sourceType":"module"}